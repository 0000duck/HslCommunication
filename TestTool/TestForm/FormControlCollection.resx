<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="userClock1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>