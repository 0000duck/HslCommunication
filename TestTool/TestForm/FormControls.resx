<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="userClock1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAN8AAAD7CAYAAADqxEEMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABnlSURBVHhe7Z1NbBxHdsd1zNFHnwwhwSI5GImATQDmEIBA
        cuAtusW5BAo2C9CIYzBeApb3EMgIFsw6gbnArkPLoZewHZO0aHL0QZuU9UErkjWWJUWiKImmRIiSZS9t
        h16uGMW0ZGMr71/zaljzyemZ7p7u6f8PKAw5oqZ7qt+/Xn28erWDEEIIIYQQQgghhBBCCCGEEEIIIYQQ
        QlrnzTff/IOxsbHu7cqBAwd26X8hhNTDieqtt97aJ69D8npqdHT0N/Jq6pXp/QPm5At/Z1+r/XtZ2Rwf
        Hz8tZUR+3ielhyIlmUGEtVOM/wk1/pz8fkleqwnFiDAq3puenjZzc3PF8uEvnjZXnnzMvvrvv/vuuxX/
        V65b8Z4r8m+LUmbkZ4h/DxoDvWVC0okI6FGITQq8zYpv8H5xopqfnzdLS0vm5s2b5r333jPb8fn0i1Z8
        eN2Oc+fOmUuXLpnl5WVz9erVmiJ1RUS4Kq9jUnrRaOhXIiSZ5HK5R0Rou8VgB+FNnCG7Mjk5aUUF4//0
        00/N2tqaSqOU7777zopkO4KID9e7f/++/lbK+vq6WV1dtff1/vvvm7fffrvkvrWsoBGBZ0Sjol+ZkPYB
        QxTDhHeo6EJOTU2ZM2fOWG+2sbFhbt26ZS5cuKAm3zpBxNco169ftyKEUNEA5PN5c+jQoZLvhaKNC7qp
        9IokPkZGRn5HjA9jt5xvkPAYp06dsmKDN6nG5uam/tQ695fyVnh4DYuHDx9az1sOGg+IEY0JGhX/e0vJ
        S+mF59cqIiRcpJXv1q7Xum98s7Oz1kNkiYWFBTtWLRPippQxqaPdWmWENI9OmgyIUZVMmBw/ftx6AngK
        dNEwmZEl4N2/+OIL6yVXVlasx/frRxqoVSlD7JaSwMBopLwihoTW3BoUxj6YkUQXjFSCLvXi4mK1WVRp
        w7imSLYBokPXEkYjr3a9DeMczAaSxsGYF8sbZSLMSZ12aVUTUgAtM4zDN5azZ8+aw4cPV52AII0xMzNj
        Pvzww/Llizlp5Lq16klWKRcdjAQttlsTw/oYxnWJYm3Y9OzrN3P66xa3zfDQDrNjn1dylX8VF2i07ty5
        Y39GlxRddn+CRgR4iZMzGUQXxG330okOkyZhLgWEz5zpLwqrUny3z/SUiU3/fmhYZJkM0JBhHdEXoTyH
        GYa0ZQR54L1j//n6xsFXB63oYAyJ827lfNxfFJwVWVXPVwX7/3rMcPVgmrYBr4gZU4hw6rWXzcQbv3wg
        IhzAGqo+JtJJaBczP/nGsLnQ/8fmUt/jZmMtfRMpnSA+B3oal3/8Z+byP/y+QWMozwdLOj36yEjaQRdT
        HuigFNvNwZLB1X/7axua9auJ59UM0kMQ8QUSahv49dkD9jksPPsnZubIVhgbuqLSWDKGNM3IQ3xCBvaI
        0LcPFYN+dDG/WV02C09/z5av715TU0gHDQvKer32TrrU47cPvzHXn/2+Fd+9y7P2PawTejOjm/Ls9uqj
        JGlBvR22xNgHiYiU8nhLeD08+Nsv/1DfSQeNiK/wN8mabCnH1f/Kz/9G3ymArmhZxEyeXjAliLfrkmK3
        9KAVrbU9By3v3dd/ZL1gmqgvPm9GNKEez/HtvS/NZ6M/rtnzQGCD21EhHhDxtBwLJhkRXZ+Uh3hgCHPq
        xFCw2uJzwkvuBEtQMETwvaA82wF91CQpaDfTLpbLAzLyu3nw4IE+ws6ilvjmchBeA2PBFIJIGSdAKeyG
        JgURW5c8ELvrAOtGiLJHZEXT8Zg1I0g8GvmbiKguvoLX6zmT1BFe89y7d89u8sXOf3ZDEwS6mfIQ7M6D
        o0ePttjNrB9BUqCRv4mWeuIr3FeVkpTxX4uNFruhCUEqv7h2h/QMLQVANxJB0myUCRHCbbSwJOGevZQc
        I2NiQtM42LhMzGaimxkmjQiL4gtARI0WuqEuRlTsYQbjfjUREgUqvKNOeFHss6P4oiPsesPaLdJZwB5k
        HDhPAUaEzmgiWY8VXq0kRa1C8UVHFPWG7V9OgFJWRIRMXREmmFqWSrXp+Y4cOWJOnDhRM+9lq1B80RFF
        vSEi5tixYzaRFexD7GQVQfRqOqQV0JKhRUPFYkYTlY1Zr6h2mFN80RFVvcEmYA9uJlRsZl0Kd8u3gi88
        pDiPY98dxRcdUdcbBOjljsESFNcCmwFdTSc8JDGKytOVQ/FFR1z15gQID8guaEAwuSIVZ8d46ErEJTxA
        8UVHnPXmCxA9KDUtUg8sJ0il2VlNjPHi6Gr6UHzREWe9+WNAKSuMB90GXcc7LsVOH2MgTTqHuBstCBAN
        OOxpdHT0GtcB6yCVZCNXJiYmbN5MQlrlypUrfra0OYaiVUEqxsZqugV0RK/EOdYjnYk7m9DtiJAGfkZN
        jgCpEOxOiCxkjBA06J4HHFTTyzYiPOzHs9uCwg6SJsQHDTsaeNia2F22s2VrvKZdy8vaMVukPSBZL+wt
        80sQUgk29QOyi3F8R+ICQRuwOyn5TE7AuHEe+uHuYBJC4gBrx95OiGyN/zDOk2KzjLmTbAiJE+yKydz4
        zx/nyc/2eGFC4gaznzh/EXaYmfGffFk7zkNeTUSwYB2GkLhBo4/MaJkZ/0nrsgdfFO6eZ5uTJFA2/tun
        ptpZ6G50e2gJ1/NIksD4T8W32ZEHdYrwhvAFsaxASNJA+knY53inhZ9hQyO+mIvbJCRpoPvpxX92zuyn
        eD27MRbn4xGSVDAcgp1ieNQRky/SivRNjL1pWxVGsZCkg2ER7FVEmO7FdzvJ8sZr/3vxH//ILL3ytD2T
        jZCkgjMbVyZ+Ys+Inxj5929Tnf9FWo+xw//xr2b+qd+zp5Bee+Zx88XsS/pVCUkO6+cPFY+pRjk62Afv
        l1dTThf+JMv9L++aT159qvjFcCIpIUlh7b/eKNrm8gt/ae7fWUj35IvcuI1kwYkyjvtLefvlHqzd1XfK
        qHeElP23BB57RVLAbTM85NlOmf2gu3nzJz3W+zkQcwz7xWShmnQ6cF4POxYam2TZ5ggpFd7W4Y/69xQg
        aQCbuKnEVtR+hoZFlrVB8qXUeT/n9RraINvAEVL2yOPyirL/r3POHycx04D9LC8vp8v7+WO9oKn/qouv
        0EpVHHlc4Q0JCUAD4kOvLVVjv0Ber4yq4lOR9X+svxdh15M0T6M5RL20E8n2fq14PVC1QmwLVU18Ooim
        +EhQ1KYasZ3UeD+5uddxk+fPn9dbDwbFR6KmYGNV5hDq4Lyf2PdpNfVkIV4PpwrZFIDYIdzMDvVg4mO3
        kwRB7SWgzWDDLfb7oTcH20bvTk0+OciN2YzT2BmMLmczB5xUFV/NiZUaEzGEVOCEF3x2HN1OJPhy3k9K
        Tk0+GSACHJHguLlWcrJUFV+t7mUDs1WEALtUVWFXwYBDUe+3iV6emn77kRvqgfDgnluhuviEiq4nvR5p
        lPBsxcv30qum337kZsZwU1evXtXbbI6a4gNuhkoLhUcawxvrVSsBxn9I9qXiS0bAtaYCtBMtTH5LOhmM
        /9xhK4nI9SJjPZuRbG6ulR41IenA5XqR0v5MZ3ITc7gZZiQjWcDLdLaiEmgPurZnZ4Ea271ASPpBwmfY
        /fj4eJdKIX6ky7kXN4G8F82EkxGSNrB+ffr0aSy2I95zSKUQP6L8RYgPN4OzrwnpdLDYfvbsWev5RHzr
        bclyJhfeiRvA7A8hWcNttBUddKsk4kMuamc5sfBISNbAljnYv5T4Zz2lyzmCi2O3LyFZA+e7q/jmVBLx
        IRe1Z+xxYZ1kEczuu1jPWMd9brzXaiwnIWkGgSXQQazjPjfeO3funN4GIdkDsczQgZT4xn1yMZunhVEt
        JMtg+xx0IM4ovvwucrF1XJTjPZJlvHGfwQYDlUd0YBu9XqyljbOEpB2cNYl5j/Hx8XiSK4nweiE+LDJi
        ja+ZdBGEdAKw/5MnT1rPJ+IbUIlEh1zI5mpBmA0hWcfbYBt9bhdR+AwuhkVGQrLOxsaG83yLKpHoGNNE
        SbgoIVkHky7q+Uyki+34cFwEMzyEkAJuf1+kqSXcTCcmWwghBVxWs0hnPOXDn8BFuJOBkC3cDgcZku1V
        qYSPXGAfLjI/P6+XJYS4c/zEOY2oVMJHLmDzc+LIXEJIAS+pUnT5PMWtzlN8hJTy1VdfWfGNjo7+RqUS
        PiK+b3ARzO5gcZGQrONCzCYmJqwAIzvHAR+OQggpBQKENsRB7VS5hAvFR0h1IhUfPhQfzt3rhFQS6a52
        io+Q2kQqPka3EFKbSKNcoGh8eKDTiHimXiTk83mze/du093dbV9nZmb0X0i7QD4j9Xx7VDLhEVR8hYMu
        /WOb9ZDCAIcRkkoGBwdNV1eXzSSAZ4HXnp4e09vbq39BwqJgw405j6jFFyBjWY2jeHmOektAbPB21diz
        Zw+2tOhvpGXEVkvsV3txtQQYaSYziG96/4C5uP9H5vPpF4vl/lJeL++xNmx65Ea3zlB3FERZ+T5pBHi4
        Wl1MBPfu2rVLfyPhc9sMD2313GD3vg4WRp4z0Eck4pMP7T3x0x+YK08+VlJw4QpUfBWtRK33SUM8+uij
        dTMIyGPSn0j4lIoPdl+uBeij/Z5PmMuhn+x3MfXmKb6mwVgPky3VQA7VnTt36m8kbArjv37puxWI1fMF
        G/MVKAhwq/R/XGMsSBpiaGio5sQKJmL6+vr0NxIGJfa7zURhpGM++dAefPipU6f0ck1QcyxIGgXjvr17
        99qAXoBXNwPK04EjZJsJlwsXLjjx9apkwkM8X/B1vnLsF9hy3aQ5BgYGzCOPPGLHeHiFx3NiJNFR3vX0
        iXSpYXx8vAsfjvPXm6N0wEpI6qizVIaxOPSBVCsqmfAQRQeK7bx9pr/kJgv9Z3o9kl7qeT70CNXzJSGw
        emt205ahYXmHkDQA2y0T2TZjvkjFx5ydJFtoOGSx1I/Mijx3Jz4chRBSSqSbaQE+XAaUZmFhgceDESJg
        lhlrfJOTk9GKT4S3jAtgTYMHYxJi7BF5V65cccJ7oFIJH7mAPQ6amcsI2QLeT8UX3fHQ4vkGcJHFxUW9
        LCEEeWyhCyljKpXwkQ+3p9LWCu4lJIvg+AToAs5JpRI+8uEtRrkQ0nlEGt3iyOVyj+AiU1NTellCCJKK
        QRdIMqZSiQYZVK7jQoygJ6QAAk+gCTgnlUk0yEXyuBDX+QgxdskNehCntKoSiQ65yBAuhjPJCMk6SOsB
        Pch4b0YlEh1ykT5c7IMPPjBLS0v2QHhCsgjs/+LFi1Z8UgZVItEhnq8bF0M4DcJqKD6SVSC+gwcPum5n
        +Jtoy9HdDZu4IEJrCMkymPlX8UUT01mOXGwOF2SYGckyLqxMyopKI3rkYvtwUSRqJSSroNsJHYyPj4+o
        NKKHJxYREvHJRPWQPq5dbOe4j2QVN96LfHG9HLmo3V6EiG5Cssba2poVnjih6LYR1cKt9wXJYE1Ip+Bl
        qI5+fa8cN+7jMdEki7hsZbGP9xzicldxAzdv3uSyA8kEiGm+deuWC6bejH285xDx2ThPpE1joDXJAljb
        O3bsmPN6R1UK8SMXt5trDx06pLdGSOfjdTmj2zzbCHIDi7iReoc2EtIpeFuI1hFqqTJoD3IjNtqFs54k
        C7hZTnE68UW11EJaAHuGAwag3OFAOh2XFl7sPvwzGZpBbsYGWuNoYkI6FbewLiW+QOrtkFbAHhnd0sGZ
        hCQc7/TZ8I9+bhbNamb3+DGNPOlEMKTCrD5sPLKTiJpFbmoMN8ZtRqQTQRAJ7FtKXk0+Obhws4mJCXPy
        5EkuupOOAD25mZkZc/jwYSu+8XaFk22H3NwHuEEklQmMnvxZLDy7nURA4WjnHab/Y32jAW7cuIGEuBDf
        Z2rqyQOtAsSHvnGgZYeKI3f1VFAKkITJ2rDp0cY9iPhcRmqx7z419WQyNjZ2CTeKLfaNMpeTCik/s90K
        svrh84Q0Q8HOeqwAGxWfG+uJXa+2PaJlO5rxfhQfiRxnT+r9GhVfaryeI7D30wop73Zu/U5IK3j2FEB8
        Lht1Kryew3k/hOI0jo7ztATpkxNSm9tmeEhsys0fBBCflyApHV7PgdYCN+5vsv3tw2/MF7Mv2VefwgxU
        jxle0zdchZV3RQkJSMG2vOFLDfH9z4lh8+29L/W3kpyc7dsw2yxoLXDzbuy3fv6Quf7s982VJx8znx/8
        F/2KoFYXk11P0iJ2nOc36kIV8d27PGvt8tozjxedgxvrSYk/R0sYYOyX++XPzeV/+nP75VBuDf6V+fru
        Nf3aQs1uQFl3gZBAqP2IbdUuBWHC433y6lNFG51/7k/N9P6BdI31yhHv1zX12svm8t//rlno32W9XwUq
        Pno+Egs1G3tj/u/Wf5vF5//CCnB66HmM9dq7U71V5AuM4Iu8f/w9/YqV2KWGamM+LjWQsKkjPoCdC7BX
        6W7OqQmnlwMHDjzqJl/q7fdzYT/FwskWEgV1xOdPsiRu50KzyJfpxZfC5AvTy5Ok4i2oD6jpdgbypexZ
        7nDrhCQNHHMO+5SyktpJllq4LUcocO+EJIXNzc3iRlnxesncMtQq8uUG8QUR+cJkSyQpuEgWKTk11c5D
        002s4Iu6VIMcA5J24OzOHXCJSUFMDqqpdiZY+5Mva/O9HD9+PNDWI0LCAmGPs7OzNvOCii8ZqQCjRgRo
        Q8/wxTc2NrQ6CIkPeD43zpOSnGxkcSBf2B6uyfEfaQfeOC/9i+lBqTb+IyQOMjXOq4U//mO2axIHyDqt
        Z+tlZ5xXCzf+Q4Uw4S6JEqzn4SRl2JuUbI3zaiEVYcd/qBgKkEQBJli8PXrZG+fVAuE8UiE2/AwVhIri
        +h8JA3g7TOidOnXKCW8ldTvTowYVIn1wm3gJAsTRuxQgaRUc3nPixAkrPEywSNmpJkd8UDFSSZ+gonji
        EQmD8+fPO+HdQ3yxmhqpBgQoZR0VxiUI0gruFFkpm2JT2Z7ZbBS0UE6A8/PzWpWENI63RahzdypEhVRa
        D1osVN7i4qJWKSHbgzVjJzwpvWpSJAjSYj3hKpEekDRCmfC4ltcK0v3EkdPWA3IMSOrhjfEovLCQiix2
        QbFes7CwEP7hm3pMWa3CFIbNUHoEQLGEmIsVQRkfffSRf146CruaYeJPwuRyudjWACvSjZPG2SZNXxhg
        AR1rwmIfEN0mhipqMiRMkM5NKvgzCBBbkaIPRWPi3paIWHxogF3kyujo6AaXEyJGKhjrgDYSBrGgUSZj
        otdrESu+srMSQgLCc7GaYg/YGsQF9DjwQ9GmpqbMnTt39JGECb1ey1Q7qCQEsC3I252wggZZTYPEgQZj
        290QKBhwh7kjnl4vBKpNYrU42YKNsG4/npQ8g6TbiO4HtDOh6IZgHIiuaGvjQXq9SHBiDCBAdC8xs41X
        L/VD52WVTivyILAj3qakQDf0yJEjrYkvou4ScT2KxusWvZl33nnHHD582IpOupiY8e7RR0+SALof8lBy
        IkT7kC5dutR0N9SemsSDWqIhYMOGbqZL7yclfyCrOVfSgN8NRV7QeqkJf332gP7kwy5nWNxeq6xD3/Nt
        XJsz3319T/+lFHYzUwqmneVhLeKhYXCOsKNyLwjh4RDE2y//UN9RdFwS5cJwVoDQSupR6xYN2+fTL9r6
        /9XE8/qPWyA+0+XUZDczhehyxJBrObEov7q6ah8uztx258PjPG6fVM1y6iJ2cSYxgfddOPh0qzgxfrO6
        bBae/p4t+Blgogy9FffMpAGdYTczxcgD7HJrgijoytyd+GcrPJwPn1YKjUS6PTS8Hp7D8i/+1o7R3TOS
        57Uqz4178DoFeZh96MJMjL1pz4jHQ//67jU1g5QRQ8xkHGC8N//MH9pnMb1/wHm7Aa7ddSDowsgDHjv0
        ygvm6GCf7YqGvjsiBqzXS/lsrOtizv6s352Bnu+Yo5hJbcQDdksLaydkUJCsCafWpIPbZnhIxk8hbsuJ
        E4SG+bOY6GJK2aOPhmQBhKdpV3TVGQIiZHwRIudj8thaCimdzEheUIBff+hhoJFzdS0Fy0GD7GJmmGoi
        RHfUTXdjvSlZFMRXPtmSxAkYBD8j6N0XndQzlg72cRaTFIEI0f0Rw7BhaihYI0zeAS4qvopuZ6332wN6
        EC4kDAWNm5S99HSkLhCheMOiCBEvil0TGK+0n8KYrzICp/1jQUQTYcnAO3QSoltDzwKNm1YvIdsjRrNb
        DMieIeEKulKImHGB2+iWxj1ZY8d6bfR8GL+5749xHeIv0VX360nqbhGNmFYlIc0hRoQ09vukFL0hCqbK
        8/m8TeATK7rO53u/wuRLPJMuN27csOM47/ARW6SeMG4e5JIBiQRp0RExMyTFJnNyBYaI5L5RprXwub/0
        knkSnq5Yog0tQ5cSHg7LBBgLHygkLELBrOWYFMZfkvgQISKp76QaYbFgjAgjhbE6MaKrhu5qWLjAZLyG
        Be7XdaEhNqRch2f3x3CuyHc/jW4lJ1BIW4EB6vhwUAyyGEfqCox3dnbWnD59urgrux6NbAQOIr7tPg87
        PnBfmFTCmNbLj+KXFfmOI2hwuExAEguME0aK7imMFsbrddNsQdcN4yZk4YZHxI4LeEkULPZvRxDxwXth
        vQ3ezHlgCA3Xh5f278sVuXeM3+RlbI8UJigi6QTGq0YMMc7Ja8l4sbxMTk5aYfjFidSVhZHnrPjw6r/v
        ROWXgwcPoptY9VpaMG6bg2eT115OmJCOBl1VEWE3jF0KZlJh/MV40+0KdgGc+OkPirsBGizwwrjOgBRE
        9XSzC0mIhwgCqfG7/SKicSKtW5yo/CLvdelHE0IIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
        IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggpY8eO/wfbOdU/
        VpRV6QAAAABJRU5ErkJggg==
</value>
  </data>
</root>